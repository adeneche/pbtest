// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: datapoint.proto

package pbtest;

public final class DataPointProtos {
  private DataPointProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbtest.Header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string value = 1;</code>
     */
    com.google.protobuf.ProtocolStringList
        getValueList();
    /**
     * <code>repeated string value = 1;</code>
     */
    int getValueCount();
    /**
     * <code>repeated string value = 1;</code>
     */
    java.lang.String getValue(int index);
    /**
     * <code>repeated string value = 1;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes(int index);
  }
  /**
   * Protobuf type {@code pbtest.Header}
   */
  public static final class Header extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pbtest.Header)
      HeaderOrBuilder {
    // Use Header.newBuilder() to construct.
    private Header(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Header(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Header defaultInstance;
    public static Header getDefaultInstance() {
      return defaultInstance;
    }

    public Header getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Header(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                value_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              value_.add(bs);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = value_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pbtest.DataPointProtos.internal_static_pbtest_Header_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pbtest.DataPointProtos.internal_static_pbtest_Header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pbtest.DataPointProtos.Header.class, pbtest.DataPointProtos.Header.Builder.class);
    }

    public static com.google.protobuf.Parser<Header> PARSER =
        new com.google.protobuf.AbstractParser<Header>() {
      public Header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Header(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Header> getParserForType() {
      return PARSER;
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList value_;
    /**
     * <code>repeated string value = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated string value = 1;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated string value = 1;</code>
     */
    public java.lang.String getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated string value = 1;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes(int index) {
      return value_.getByteString(index);
    }

    private void initFields() {
      value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < value_.size(); i++) {
        output.writeBytes(1, value_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(value_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pbtest.DataPointProtos.Header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pbtest.DataPointProtos.Header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pbtest.DataPointProtos.Header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pbtest.DataPointProtos.Header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pbtest.DataPointProtos.Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pbtest.DataPointProtos.Header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pbtest.DataPointProtos.Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pbtest.DataPointProtos.Header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pbtest.DataPointProtos.Header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pbtest.DataPointProtos.Header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pbtest.DataPointProtos.Header prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pbtest.Header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pbtest.Header)
        pbtest.DataPointProtos.HeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pbtest.DataPointProtos.internal_static_pbtest_Header_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pbtest.DataPointProtos.internal_static_pbtest_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pbtest.DataPointProtos.Header.class, pbtest.DataPointProtos.Header.Builder.class);
      }

      // Construct using pbtest.DataPointProtos.Header.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pbtest.DataPointProtos.internal_static_pbtest_Header_descriptor;
      }

      public pbtest.DataPointProtos.Header getDefaultInstanceForType() {
        return pbtest.DataPointProtos.Header.getDefaultInstance();
      }

      public pbtest.DataPointProtos.Header build() {
        pbtest.DataPointProtos.Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pbtest.DataPointProtos.Header buildPartial() {
        pbtest.DataPointProtos.Header result = new pbtest.DataPointProtos.Header(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = value_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pbtest.DataPointProtos.Header) {
          return mergeFrom((pbtest.DataPointProtos.Header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pbtest.DataPointProtos.Header other) {
        if (other == pbtest.DataPointProtos.Header.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pbtest.DataPointProtos.Header parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pbtest.DataPointProtos.Header) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new com.google.protobuf.LazyStringArrayList(value_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getValueList() {
        return value_.getUnmodifiableView();
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public java.lang.String getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes(int index) {
        return value_.getByteString(index);
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public Builder setValue(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public Builder addValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<java.lang.String> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public Builder clearValue() {
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 1;</code>
       */
      public Builder addValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbtest.Header)
    }

    static {
      defaultInstance = new Header(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pbtest.Header)
  }

  public interface DataPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbtest.DataPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 metric_id = 1;</code>
     */
    boolean hasMetricId();
    /**
     * <code>required int32 metric_id = 1;</code>
     */
    int getMetricId();

    /**
     * <code>required int64 timestamp = 2;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    long getTimestamp();

    /**
     * <code>optional float fvalue = 3;</code>
     *
     * <pre>
     * use oneof for {fvalue, ivalue}
     * </pre>
     */
    boolean hasFvalue();
    /**
     * <code>optional float fvalue = 3;</code>
     *
     * <pre>
     * use oneof for {fvalue, ivalue}
     * </pre>
     */
    float getFvalue();

    /**
     * <code>optional sint32 ivalue = 4;</code>
     */
    boolean hasIvalue();
    /**
     * <code>optional sint32 ivalue = 4;</code>
     */
    int getIvalue();

    /**
     * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
     *
     * <pre>
     * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
     * </pre>
     */
    java.util.List<pbtest.DataPointProtos.DataPoint.Tag> 
        getTagList();
    /**
     * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
     *
     * <pre>
     * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
     * </pre>
     */
    pbtest.DataPointProtos.DataPoint.Tag getTag(int index);
    /**
     * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
     *
     * <pre>
     * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
     * </pre>
     */
    int getTagCount();
    /**
     * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
     *
     * <pre>
     * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
     * </pre>
     */
    java.util.List<? extends pbtest.DataPointProtos.DataPoint.TagOrBuilder> 
        getTagOrBuilderList();
    /**
     * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
     *
     * <pre>
     * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
     * </pre>
     */
    pbtest.DataPointProtos.DataPoint.TagOrBuilder getTagOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code pbtest.DataPoint}
   */
  public static final class DataPoint extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:pbtest.DataPoint)
      DataPointOrBuilder {
    // Use DataPoint.newBuilder() to construct.
    private DataPoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DataPoint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DataPoint defaultInstance;
    public static DataPoint getDefaultInstance() {
      return defaultInstance;
    }

    public DataPoint getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DataPoint(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              metricId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readInt64();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              fvalue_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              ivalue_ = input.readSInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                tag_ = new java.util.ArrayList<pbtest.DataPointProtos.DataPoint.Tag>();
                mutable_bitField0_ |= 0x00000010;
              }
              tag_.add(input.readMessage(pbtest.DataPointProtos.DataPoint.Tag.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          tag_ = java.util.Collections.unmodifiableList(tag_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pbtest.DataPointProtos.internal_static_pbtest_DataPoint_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pbtest.DataPointProtos.internal_static_pbtest_DataPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pbtest.DataPointProtos.DataPoint.class, pbtest.DataPointProtos.DataPoint.Builder.class);
    }

    public static com.google.protobuf.Parser<DataPoint> PARSER =
        new com.google.protobuf.AbstractParser<DataPoint>() {
      public DataPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataPoint(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DataPoint> getParserForType() {
      return PARSER;
    }

    public interface TagOrBuilder extends
        // @@protoc_insertion_point(interface_extends:pbtest.DataPoint.Tag)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 key_id = 1;</code>
       */
      boolean hasKeyId();
      /**
       * <code>required int32 key_id = 1;</code>
       */
      int getKeyId();

      /**
       * <code>required int32 value_id = 2;</code>
       */
      boolean hasValueId();
      /**
       * <code>required int32 value_id = 2;</code>
       */
      int getValueId();
    }
    /**
     * Protobuf type {@code pbtest.DataPoint.Tag}
     */
    public static final class Tag extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:pbtest.DataPoint.Tag)
        TagOrBuilder {
      // Use Tag.newBuilder() to construct.
      private Tag(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Tag(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Tag defaultInstance;
      public static Tag getDefaultInstance() {
        return defaultInstance;
      }

      public Tag getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Tag(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                keyId_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                valueId_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pbtest.DataPointProtos.internal_static_pbtest_DataPoint_Tag_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pbtest.DataPointProtos.internal_static_pbtest_DataPoint_Tag_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pbtest.DataPointProtos.DataPoint.Tag.class, pbtest.DataPointProtos.DataPoint.Tag.Builder.class);
      }

      public static com.google.protobuf.Parser<Tag> PARSER =
          new com.google.protobuf.AbstractParser<Tag>() {
        public Tag parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Tag(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Tag> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int KEY_ID_FIELD_NUMBER = 1;
      private int keyId_;
      /**
       * <code>required int32 key_id = 1;</code>
       */
      public boolean hasKeyId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 key_id = 1;</code>
       */
      public int getKeyId() {
        return keyId_;
      }

      public static final int VALUE_ID_FIELD_NUMBER = 2;
      private int valueId_;
      /**
       * <code>required int32 value_id = 2;</code>
       */
      public boolean hasValueId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 value_id = 2;</code>
       */
      public int getValueId() {
        return valueId_;
      }

      private void initFields() {
        keyId_ = 0;
        valueId_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasKeyId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValueId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, keyId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, valueId_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, keyId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, valueId_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static pbtest.DataPointProtos.DataPoint.Tag parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pbtest.DataPointProtos.DataPoint.Tag parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pbtest.DataPointProtos.DataPoint.Tag parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static pbtest.DataPointProtos.DataPoint.Tag parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static pbtest.DataPointProtos.DataPoint.Tag parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pbtest.DataPointProtos.DataPoint.Tag parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static pbtest.DataPointProtos.DataPoint.Tag parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static pbtest.DataPointProtos.DataPoint.Tag parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static pbtest.DataPointProtos.DataPoint.Tag parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static pbtest.DataPointProtos.DataPoint.Tag parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(pbtest.DataPointProtos.DataPoint.Tag prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code pbtest.DataPoint.Tag}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:pbtest.DataPoint.Tag)
          pbtest.DataPointProtos.DataPoint.TagOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return pbtest.DataPointProtos.internal_static_pbtest_DataPoint_Tag_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return pbtest.DataPointProtos.internal_static_pbtest_DataPoint_Tag_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  pbtest.DataPointProtos.DataPoint.Tag.class, pbtest.DataPointProtos.DataPoint.Tag.Builder.class);
        }

        // Construct using pbtest.DataPointProtos.DataPoint.Tag.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          keyId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          valueId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return pbtest.DataPointProtos.internal_static_pbtest_DataPoint_Tag_descriptor;
        }

        public pbtest.DataPointProtos.DataPoint.Tag getDefaultInstanceForType() {
          return pbtest.DataPointProtos.DataPoint.Tag.getDefaultInstance();
        }

        public pbtest.DataPointProtos.DataPoint.Tag build() {
          pbtest.DataPointProtos.DataPoint.Tag result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public pbtest.DataPointProtos.DataPoint.Tag buildPartial() {
          pbtest.DataPointProtos.DataPoint.Tag result = new pbtest.DataPointProtos.DataPoint.Tag(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.keyId_ = keyId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.valueId_ = valueId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof pbtest.DataPointProtos.DataPoint.Tag) {
            return mergeFrom((pbtest.DataPointProtos.DataPoint.Tag)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(pbtest.DataPointProtos.DataPoint.Tag other) {
          if (other == pbtest.DataPointProtos.DataPoint.Tag.getDefaultInstance()) return this;
          if (other.hasKeyId()) {
            setKeyId(other.getKeyId());
          }
          if (other.hasValueId()) {
            setValueId(other.getValueId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasKeyId()) {
            
            return false;
          }
          if (!hasValueId()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          pbtest.DataPointProtos.DataPoint.Tag parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (pbtest.DataPointProtos.DataPoint.Tag) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int keyId_ ;
        /**
         * <code>required int32 key_id = 1;</code>
         */
        public boolean hasKeyId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 key_id = 1;</code>
         */
        public int getKeyId() {
          return keyId_;
        }
        /**
         * <code>required int32 key_id = 1;</code>
         */
        public Builder setKeyId(int value) {
          bitField0_ |= 0x00000001;
          keyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 key_id = 1;</code>
         */
        public Builder clearKeyId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          keyId_ = 0;
          onChanged();
          return this;
        }

        private int valueId_ ;
        /**
         * <code>required int32 value_id = 2;</code>
         */
        public boolean hasValueId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 value_id = 2;</code>
         */
        public int getValueId() {
          return valueId_;
        }
        /**
         * <code>required int32 value_id = 2;</code>
         */
        public Builder setValueId(int value) {
          bitField0_ |= 0x00000002;
          valueId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 value_id = 2;</code>
         */
        public Builder clearValueId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          valueId_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:pbtest.DataPoint.Tag)
      }

      static {
        defaultInstance = new Tag(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:pbtest.DataPoint.Tag)
    }

    private int bitField0_;
    public static final int METRIC_ID_FIELD_NUMBER = 1;
    private int metricId_;
    /**
     * <code>required int32 metric_id = 1;</code>
     */
    public boolean hasMetricId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 metric_id = 1;</code>
     */
    public int getMetricId() {
      return metricId_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 timestamp = 2;</code>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    public static final int FVALUE_FIELD_NUMBER = 3;
    private float fvalue_;
    /**
     * <code>optional float fvalue = 3;</code>
     *
     * <pre>
     * use oneof for {fvalue, ivalue}
     * </pre>
     */
    public boolean hasFvalue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float fvalue = 3;</code>
     *
     * <pre>
     * use oneof for {fvalue, ivalue}
     * </pre>
     */
    public float getFvalue() {
      return fvalue_;
    }

    public static final int IVALUE_FIELD_NUMBER = 4;
    private int ivalue_;
    /**
     * <code>optional sint32 ivalue = 4;</code>
     */
    public boolean hasIvalue() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint32 ivalue = 4;</code>
     */
    public int getIvalue() {
      return ivalue_;
    }

    public static final int TAG_FIELD_NUMBER = 5;
    private java.util.List<pbtest.DataPointProtos.DataPoint.Tag> tag_;
    /**
     * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
     *
     * <pre>
     * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
     * </pre>
     */
    public java.util.List<pbtest.DataPointProtos.DataPoint.Tag> getTagList() {
      return tag_;
    }
    /**
     * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
     *
     * <pre>
     * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
     * </pre>
     */
    public java.util.List<? extends pbtest.DataPointProtos.DataPoint.TagOrBuilder> 
        getTagOrBuilderList() {
      return tag_;
    }
    /**
     * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
     *
     * <pre>
     * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
     * </pre>
     */
    public int getTagCount() {
      return tag_.size();
    }
    /**
     * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
     *
     * <pre>
     * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
     * </pre>
     */
    public pbtest.DataPointProtos.DataPoint.Tag getTag(int index) {
      return tag_.get(index);
    }
    /**
     * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
     *
     * <pre>
     * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
     * </pre>
     */
    public pbtest.DataPointProtos.DataPoint.TagOrBuilder getTagOrBuilder(
        int index) {
      return tag_.get(index);
    }

    private void initFields() {
      metricId_ = 0;
      timestamp_ = 0L;
      fvalue_ = 0F;
      ivalue_ = 0;
      tag_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMetricId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTagCount(); i++) {
        if (!getTag(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, metricId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, fvalue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeSInt32(4, ivalue_);
      }
      for (int i = 0; i < tag_.size(); i++) {
        output.writeMessage(5, tag_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, metricId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, fvalue_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, ivalue_);
      }
      for (int i = 0; i < tag_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, tag_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pbtest.DataPointProtos.DataPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pbtest.DataPointProtos.DataPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pbtest.DataPointProtos.DataPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pbtest.DataPointProtos.DataPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pbtest.DataPointProtos.DataPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pbtest.DataPointProtos.DataPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pbtest.DataPointProtos.DataPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pbtest.DataPointProtos.DataPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pbtest.DataPointProtos.DataPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pbtest.DataPointProtos.DataPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pbtest.DataPointProtos.DataPoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pbtest.DataPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pbtest.DataPoint)
        pbtest.DataPointProtos.DataPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pbtest.DataPointProtos.internal_static_pbtest_DataPoint_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pbtest.DataPointProtos.internal_static_pbtest_DataPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pbtest.DataPointProtos.DataPoint.class, pbtest.DataPointProtos.DataPoint.Builder.class);
      }

      // Construct using pbtest.DataPointProtos.DataPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTagFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        metricId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        fvalue_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        ivalue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (tagBuilder_ == null) {
          tag_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          tagBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pbtest.DataPointProtos.internal_static_pbtest_DataPoint_descriptor;
      }

      public pbtest.DataPointProtos.DataPoint getDefaultInstanceForType() {
        return pbtest.DataPointProtos.DataPoint.getDefaultInstance();
      }

      public pbtest.DataPointProtos.DataPoint build() {
        pbtest.DataPointProtos.DataPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pbtest.DataPointProtos.DataPoint buildPartial() {
        pbtest.DataPointProtos.DataPoint result = new pbtest.DataPointProtos.DataPoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.metricId_ = metricId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fvalue_ = fvalue_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ivalue_ = ivalue_;
        if (tagBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            tag_ = java.util.Collections.unmodifiableList(tag_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.tag_ = tag_;
        } else {
          result.tag_ = tagBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pbtest.DataPointProtos.DataPoint) {
          return mergeFrom((pbtest.DataPointProtos.DataPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pbtest.DataPointProtos.DataPoint other) {
        if (other == pbtest.DataPointProtos.DataPoint.getDefaultInstance()) return this;
        if (other.hasMetricId()) {
          setMetricId(other.getMetricId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasFvalue()) {
          setFvalue(other.getFvalue());
        }
        if (other.hasIvalue()) {
          setIvalue(other.getIvalue());
        }
        if (tagBuilder_ == null) {
          if (!other.tag_.isEmpty()) {
            if (tag_.isEmpty()) {
              tag_ = other.tag_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureTagIsMutable();
              tag_.addAll(other.tag_);
            }
            onChanged();
          }
        } else {
          if (!other.tag_.isEmpty()) {
            if (tagBuilder_.isEmpty()) {
              tagBuilder_.dispose();
              tagBuilder_ = null;
              tag_ = other.tag_;
              bitField0_ = (bitField0_ & ~0x00000010);
              tagBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTagFieldBuilder() : null;
            } else {
              tagBuilder_.addAllMessages(other.tag_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMetricId()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        for (int i = 0; i < getTagCount(); i++) {
          if (!getTag(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pbtest.DataPointProtos.DataPoint parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pbtest.DataPointProtos.DataPoint) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int metricId_ ;
      /**
       * <code>required int32 metric_id = 1;</code>
       */
      public boolean hasMetricId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 metric_id = 1;</code>
       */
      public int getMetricId() {
        return metricId_;
      }
      /**
       * <code>required int32 metric_id = 1;</code>
       */
      public Builder setMetricId(int value) {
        bitField0_ |= 0x00000001;
        metricId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 metric_id = 1;</code>
       */
      public Builder clearMetricId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        metricId_ = 0;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 timestamp = 2;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      private float fvalue_ ;
      /**
       * <code>optional float fvalue = 3;</code>
       *
       * <pre>
       * use oneof for {fvalue, ivalue}
       * </pre>
       */
      public boolean hasFvalue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float fvalue = 3;</code>
       *
       * <pre>
       * use oneof for {fvalue, ivalue}
       * </pre>
       */
      public float getFvalue() {
        return fvalue_;
      }
      /**
       * <code>optional float fvalue = 3;</code>
       *
       * <pre>
       * use oneof for {fvalue, ivalue}
       * </pre>
       */
      public Builder setFvalue(float value) {
        bitField0_ |= 0x00000004;
        fvalue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fvalue = 3;</code>
       *
       * <pre>
       * use oneof for {fvalue, ivalue}
       * </pre>
       */
      public Builder clearFvalue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fvalue_ = 0F;
        onChanged();
        return this;
      }

      private int ivalue_ ;
      /**
       * <code>optional sint32 ivalue = 4;</code>
       */
      public boolean hasIvalue() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional sint32 ivalue = 4;</code>
       */
      public int getIvalue() {
        return ivalue_;
      }
      /**
       * <code>optional sint32 ivalue = 4;</code>
       */
      public Builder setIvalue(int value) {
        bitField0_ |= 0x00000008;
        ivalue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional sint32 ivalue = 4;</code>
       */
      public Builder clearIvalue() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ivalue_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<pbtest.DataPointProtos.DataPoint.Tag> tag_ =
        java.util.Collections.emptyList();
      private void ensureTagIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          tag_ = new java.util.ArrayList<pbtest.DataPointProtos.DataPoint.Tag>(tag_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          pbtest.DataPointProtos.DataPoint.Tag, pbtest.DataPointProtos.DataPoint.Tag.Builder, pbtest.DataPointProtos.DataPoint.TagOrBuilder> tagBuilder_;

      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public java.util.List<pbtest.DataPointProtos.DataPoint.Tag> getTagList() {
        if (tagBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tag_);
        } else {
          return tagBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public int getTagCount() {
        if (tagBuilder_ == null) {
          return tag_.size();
        } else {
          return tagBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public pbtest.DataPointProtos.DataPoint.Tag getTag(int index) {
        if (tagBuilder_ == null) {
          return tag_.get(index);
        } else {
          return tagBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public Builder setTag(
          int index, pbtest.DataPointProtos.DataPoint.Tag value) {
        if (tagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagIsMutable();
          tag_.set(index, value);
          onChanged();
        } else {
          tagBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public Builder setTag(
          int index, pbtest.DataPointProtos.DataPoint.Tag.Builder builderForValue) {
        if (tagBuilder_ == null) {
          ensureTagIsMutable();
          tag_.set(index, builderForValue.build());
          onChanged();
        } else {
          tagBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public Builder addTag(pbtest.DataPointProtos.DataPoint.Tag value) {
        if (tagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagIsMutable();
          tag_.add(value);
          onChanged();
        } else {
          tagBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public Builder addTag(
          int index, pbtest.DataPointProtos.DataPoint.Tag value) {
        if (tagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagIsMutable();
          tag_.add(index, value);
          onChanged();
        } else {
          tagBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public Builder addTag(
          pbtest.DataPointProtos.DataPoint.Tag.Builder builderForValue) {
        if (tagBuilder_ == null) {
          ensureTagIsMutable();
          tag_.add(builderForValue.build());
          onChanged();
        } else {
          tagBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public Builder addTag(
          int index, pbtest.DataPointProtos.DataPoint.Tag.Builder builderForValue) {
        if (tagBuilder_ == null) {
          ensureTagIsMutable();
          tag_.add(index, builderForValue.build());
          onChanged();
        } else {
          tagBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public Builder addAllTag(
          java.lang.Iterable<? extends pbtest.DataPointProtos.DataPoint.Tag> values) {
        if (tagBuilder_ == null) {
          ensureTagIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tag_);
          onChanged();
        } else {
          tagBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public Builder clearTag() {
        if (tagBuilder_ == null) {
          tag_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          tagBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public Builder removeTag(int index) {
        if (tagBuilder_ == null) {
          ensureTagIsMutable();
          tag_.remove(index);
          onChanged();
        } else {
          tagBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public pbtest.DataPointProtos.DataPoint.Tag.Builder getTagBuilder(
          int index) {
        return getTagFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public pbtest.DataPointProtos.DataPoint.TagOrBuilder getTagOrBuilder(
          int index) {
        if (tagBuilder_ == null) {
          return tag_.get(index);  } else {
          return tagBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public java.util.List<? extends pbtest.DataPointProtos.DataPoint.TagOrBuilder> 
           getTagOrBuilderList() {
        if (tagBuilder_ != null) {
          return tagBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tag_);
        }
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public pbtest.DataPointProtos.DataPoint.Tag.Builder addTagBuilder() {
        return getTagFieldBuilder().addBuilder(
            pbtest.DataPointProtos.DataPoint.Tag.getDefaultInstance());
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public pbtest.DataPointProtos.DataPoint.Tag.Builder addTagBuilder(
          int index) {
        return getTagFieldBuilder().addBuilder(
            index, pbtest.DataPointProtos.DataPoint.Tag.getDefaultInstance());
      }
      /**
       * <code>repeated .pbtest.DataPoint.Tag tag = 5;</code>
       *
       * <pre>
       * should we use repeated int32 key_ids [packed=true] and repeated int32 value_ids [packed=true] instead ?
       * </pre>
       */
      public java.util.List<pbtest.DataPointProtos.DataPoint.Tag.Builder> 
           getTagBuilderList() {
        return getTagFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          pbtest.DataPointProtos.DataPoint.Tag, pbtest.DataPointProtos.DataPoint.Tag.Builder, pbtest.DataPointProtos.DataPoint.TagOrBuilder> 
          getTagFieldBuilder() {
        if (tagBuilder_ == null) {
          tagBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              pbtest.DataPointProtos.DataPoint.Tag, pbtest.DataPointProtos.DataPoint.Tag.Builder, pbtest.DataPointProtos.DataPoint.TagOrBuilder>(
                  tag_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          tag_ = null;
        }
        return tagBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:pbtest.DataPoint)
    }

    static {
      defaultInstance = new DataPoint(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pbtest.DataPoint)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pbtest_Header_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pbtest_Header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pbtest_DataPoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pbtest_DataPoint_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pbtest_DataPoint_Tag_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pbtest_DataPoint_Tag_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017datapoint.proto\022\006pbtest\"\027\n\006Header\022\r\n\005v" +
      "alue\030\001 \003(\t\"\236\001\n\tDataPoint\022\021\n\tmetric_id\030\001 " +
      "\002(\005\022\021\n\ttimestamp\030\002 \002(\003\022\016\n\006fvalue\030\003 \001(\002\022\016" +
      "\n\006ivalue\030\004 \001(\021\022\"\n\003tag\030\005 \003(\0132\025.pbtest.Dat" +
      "aPoint.Tag\032\'\n\003Tag\022\016\n\006key_id\030\001 \002(\005\022\020\n\010val" +
      "ue_id\030\002 \002(\005B\021B\017DataPointProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_pbtest_Header_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pbtest_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pbtest_Header_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_pbtest_DataPoint_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pbtest_DataPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pbtest_DataPoint_descriptor,
        new java.lang.String[] { "MetricId", "Timestamp", "Fvalue", "Ivalue", "Tag", });
    internal_static_pbtest_DataPoint_Tag_descriptor =
      internal_static_pbtest_DataPoint_descriptor.getNestedTypes().get(0);
    internal_static_pbtest_DataPoint_Tag_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_pbtest_DataPoint_Tag_descriptor,
        new java.lang.String[] { "KeyId", "ValueId", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
